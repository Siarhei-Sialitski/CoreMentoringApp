/* 
 * Core Mentoring App Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing ProductsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ProductsApiTests
    {
        private ProductsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ProductsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ProductsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ProductsApi
            //Assert.IsInstanceOfType(typeof(ProductsApi), instance, "instance is a ProductsApi");
        }

        /// <summary>
        /// Test ApiProductsGet
        /// </summary>
        [Test]
        public void ApiProductsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ApiProductsGet();
            //Assert.IsInstanceOf<List<ProductDTO>> (response, "response is List<ProductDTO>");
        }
        /// <summary>
        /// Test ApiProductsIdDelete
        /// </summary>
        [Test]
        public void ApiProductsIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.ApiProductsIdDelete(id);
            //Assert.IsInstanceOf<ProductDTO> (response, "response is ProductDTO");
        }
        /// <summary>
        /// Test ApiProductsIdGet
        /// </summary>
        [Test]
        public void ApiProductsIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.ApiProductsIdGet(id);
            //Assert.IsInstanceOf<ProductDTO> (response, "response is ProductDTO");
        }
        /// <summary>
        /// Test ApiProductsIdPut
        /// </summary>
        [Test]
        public void ApiProductsIdPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //ProductDTO body = null;
            //var response = instance.ApiProductsIdPut(id, body);
            //Assert.IsInstanceOf<ProductDTO> (response, "response is ProductDTO");
        }
        /// <summary>
        /// Test ApiProductsPost
        /// </summary>
        [Test]
        public void ApiProductsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ProductDTO body = null;
            //var response = instance.ApiProductsPost(body);
            //Assert.IsInstanceOf<ProductDTO> (response, "response is ProductDTO");
        }
    }

}
